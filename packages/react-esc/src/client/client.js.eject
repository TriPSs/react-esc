import React from 'react'
import ReactDOM from 'react-dom'
import config from '../config/default.client'
import defaultLayout from '../config/layout'
import Root from './containers/AppContainer'
import renderMethods from './modules/ClientRenders'
import createStore from './store/createStore'
import { Resolver } from 'react-esc-resolver'
import Storage from 'react-esc-storage'

const store = createStore(config)

// ========================================================
// Render Setup
// ========================================================
const MOUNT_NODE = document.getElementById('root')
const renderMethod = config.compiler_render

let render = (Component) => {
  // Set global that the client is rendering
  global.isServer = false
  global.isClient = true

  // Checks if the Cookie storage is available, if not it will create it
  Storage.check()

  const layout = { ...defaultLayout, ...(window.___LAYOUT__ || {}) }

  Resolver.renderClient(
    renderMethods[renderMethod]({ Component, store, layout }),
    MOUNT_NODE
  )
}

// Enable HMR and catch runtime errors in RedBox
// This code is excluded from production bundle
if (__DEV__ && module.hot) {
  const renderApp   = render
  const renderError = (error) => {
    const RedBox = require('redbox-react').default

    ReactDOM.render(<RedBox error={error} />, MOUNT_NODE)
  }

  render = (Root) => {
    try {
      renderApp(Root)
    } catch (error) {
      renderError(error)
    }
  }

  module.hot.accept('containers/AppContainer', () => {
    const NextRoot = require('containers/AppContainer').default;

    render(NextRoot)
  })
}

render(Root)

